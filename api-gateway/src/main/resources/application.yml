spring:
  aop:
    proxyTargetClass: true
  application:
    name: api-gateway

# Define the port where the API gateway server would be running
server:
  port: 8765

# Define the Eureka server that handles service registration
eureka:
  instance:
      hostname: localhost
      port: 8761
  client:
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${eureka.instance.port}/eureka/

zuul:
  routes:
    dummy-service: 
      path: /dummy/**
        
    uaa-service:
      sensitiveHeaders:
      path: /uaa/**
      stripPrefix: false
  add-proxy-headers: true

security:
  basic:
    enabled: false
  oauth2:
    client:
      client-id: demo
      client-secret: demo
      access-token-uri: ${auth-server}/oauth/token
      user-authorization-uri: ${auth-server}/oauth/authorize
      scope: read, write
    resource:
      user-info-uri: ${auth-server}/me
auth-server: http://localhost:9999/uaa

logging:
  level.org.springframework.security: DEBUG

---

spring:
  profiles: docker

server:
  port: ${SERVICE_PORT}

eureka:
  instance:
    prefer-ip-address: true
  client:
    service-url:
      defaultZone: ${REGISTRY_URL}
